import type { FC, ComponentPropsWithoutRef } from 'react'
import Head from 'next/head'
import Link from 'next/link'
import { FaGithub } from 'react-icons/fa'
import { Input } from '../components/input'
import { useSupabaseClient } from '@supabase/auth-helpers-react'
import { Button } from '../components/button'
import { useRouter } from 'next/router'

type LoginPageProps = ComponentPropsWithoutRef<'div'>

const LoginPage: FC<LoginPageProps> = ({}) => {
    const supabase = useSupabaseClient()
    const redirectUrl = (useRouter().query?.redirectPage as string) ?? '/'

    async function signInWithGitHub() {
        const { data, error } = await supabase.auth.signInWithOAuth({
            provider: 'github',
            options: {
                redirectTo: `http://localhost:3000/${redirectUrl}`,
            },
        })
        console.log(data, error)
    }

    return (
        <>
            <Head>
                <title>Teapot chat</title>
                <meta name="description" content="Generated by create-t3-app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <main className="container flex flex-col items-center min-h-screen py-16 mx-auto bg-gray-50">
                <h1 className="text-5xl md:text-[5rem] leading-normal font-extrabold text-gray-700">
                    Tea<span className="text-indigo-500">pot</span> Chat
                </h1>

                <div className="shadow-md p-4 rounded bg-white my-2 w-full max-w-xs">
                    <section className="flex flex-col items-center">
                        <h2 className="w-full text-center">Log in using: </h2>
                        <Button className="text-3xl p-2" onClick={signInWithGitHub}>
                            <FaGithub />
                        </Button>
                    </section>
                    <div className="relative my-4">
                        <span className="absolute top-0 left-1/2 -translate-x-1/2 -translate-y-[56%] bg-white p-2 text-gray-600">
                            or
                        </span>
                        <hr />
                    </div>
                    <section className="flex flex-col items-center">
                        <h2>Log in with email</h2>
                        <form className="flex flex-col [&>*]:my-2" onSubmit={(e) => e.preventDefault()}>
                            <Input label="Email" />
                            <Input label="Password" type={'password'} />
                            <Button>Log in</Button>
                        </form>
                    </section>
                </div>

                <section>
                    <span>
                        {'First time? '}
                        <Link href={'/register'}>
                            <a className="text-indigo-500 hover:underline">Register now</a>
                        </Link>
                    </span>
                </section>
            </main>
        </>
    )
}

export default LoginPage
